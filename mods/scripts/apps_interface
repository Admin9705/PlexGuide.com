#!/bin/bash

# Function: apps_interface
apps_interface() {
    local app_name=$1
    local config_path="/pg/config/${app_name}.cfg"
    local default_appdata_path="/pg/appdata/${app_name}"
    local app_path="/pg/apps/${app_name}"

    # Check if the Docker container for the app is deployed
    local container_status=$(docker ps --filter "name=$app_name" --format "{{.Names}}")

    # Determine deployment status
    if [[ -n "$container_status" ]]; then
        local deployment_status="\033[0;32m[Deployed]\033[0m"  # Green
    else
        local deployment_status="\033[0;31m[Not Deployed]\033[0m"  # Red
    fi

    # Display the deployment header with the status
    echo -e "App Deployment: $app_name $deployment_status"
    echo ""

    # Create config file if it doesn't exist
    if [[ ! -f "$config_path" ]]; then
        touch "$config_path"
    fi

    # Set default appdata path if not set in config
    if ! grep -q '^appdata_path=' "$config_path"; then
        echo "appdata_path=${default_appdata_path}" >> "$config_path"
    fi

    # Read appdata_path from the config file
    source "$config_path"
    
    # Ensure the appdata directory exists and is executable
    if [[ ! -d "$appdata_path" ]]; then
        mkdir -p "$appdata_path"
        chmod +x "$appdata_path"
    fi

    # Menu
    while true; do
        clear
        echo -e "App Deployment: $app_name $deployment_status"
        echo ""
        echo "1) Appdata Path: $appdata_path"
        echo "D) Deploy $app_name"
        echo "Z) Exit"
        echo ""

        read -p "Choose an option: " choice

        case $choice in
            1)
                echo "Appdata Path: $appdata_path"
                read -p "Press Enter to continue..."
                ;;
            D|d)
                if [[ -f "$app_path" ]]; then
                    echo "Deploying $app_name ..."
                    bash "$app_path"

                    # Notify the user that the app has been deployed and display the app name in blue
                    echo ""
                    echo -e "\033[0;34m${app_name}\033[0m has been deployed."
                    read -p "Press Enter to continue..."
                else
                    echo "Error: The app script for $app_name does not exist or is not executable."
                    read -p "Press Enter to continue..."
                fi
                ;;
            Z|z)
                break
                ;;
            *)
                echo "Invalid option, please try again."
                read -p "Press Enter to continue..."
                ;;
        esac
    done
}
