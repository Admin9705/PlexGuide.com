#!/bin/bash

##### Port Number: 4748
##### AppData Path: /pg/appdata/vaultwarden
##### Signups Enabled: false
##### WebSocket Enabled: false
##### Admin Token: null
##### Version Tag: latest
##### Expose: 

# ANSI color codes
RED="\033[0;31m"
GREEN="\033[0;32m"
NC="\033[0m" # No color

# Function to deploy the Docker container for Vaultwarden
deploy_container() {

    # Sourcing and configuration file - required
    config_path="/pg/config/${app_name}.cfg"
    source /pg/scripts/apps_support.sh "$app_name"
    source "$config_path"
    source /pg/apps/${app_name}.functions

    # Check and update the Vaultwarden token if necessary
    if [[ "$admin_token" == "null" || ${#admin_token} -lt 12 ]]; then
        clear
        echo -e "${RED}The Vaultwarden Admin Token needs to be updated${NC}"
        echo -e "Please enter your Vaultwarden Admin Token (minimum 12 characters)"
        while true; do
            read -p "Admin Token: " new_token
            if [[ ${#new_token} -ge 12 ]]; then
                admin_token="$new_token"
                # Update the config file with the new token
                sed -i "s|^admin_token=.*|admin_token=$admin_token|" "$config_path"
                docker stop "$app_name" && docker rm "$app_name"  # Kill the Docker container if the token changes
                break
            else
                clear
                echo -e "${RED}Invalid input.${NC} The token must be at least 12 characters long."
                echo -e "Please enter a valid token."
            fi
        done
    fi

    # Run the Vaultwarden Docker container with the specified settings
    docker run -d \
      --name="${app_name}" \
      -e SIGNUPS_ALLOWED="${signups_allowed}" \
      -e WEBSOCKET_ENABLED="${websocket_enabled}" \
      -e ADMIN_TOKEN="${admin_token}" \
      -p "${expose}""${port_number}":80/tcp \
      -v "${appdata_path}:/data:rw" \
      --restart unless-stopped \
      vaultwarden/server:"${version_tag}"

    # display app deployment information
    appverify
}
