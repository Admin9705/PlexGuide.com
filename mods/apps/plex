#!/bin/bash

##### Media Path: /pg/media
##### Port Number: 32400
##### Time Zone: America/New_York
##### AppData Path: /pg/appdata/plex
##### Plex Token: null

#### Token
token() {
#### Token
token() {
    while true; do
        clear
        echo "Current Plex Token: ${plex_token}"
        echo ""
        echo "You can update the Plex Token here."
        echo -e "Please enter your new Plex Token from \033]8;;https://plex.tv/claim\033\\https://plex.tv/claim\033]8;;\033\\ or type ${GREEN}[Z]${NC} to exit."
        echo -e "To skip entering a token, type: ${RED}no-token${NC}"
        echo ""
        read -p "Plex Token: " new_token

        # Check if the user wants to exit
        if [[ "${new_token,,}" == "z" ]]; then
            break
        fi

        # Validate and update the token
        if [[ "$new_token" == "no-token" || "$new_token" =~ ^claim ]]; then
            plex_token="$new_token"
            # Update the config file with the new token
            sed -i "s|^plex_token=.*|plex_token=$plex_token|" "$config_path"
            echo "Plex Token has been updated to: $plex_token"
            sleep 2
            break
        else
            echo -e "${RED}Invalid token format. Please ensure the token starts with 'claim-' or type 'no-token'.${NC}"
            sleep 2
        fi
    done
}

}

#### Example
example() {
    echo "This is the Example command execution - 98."
    read -p "Press Enter to continue..."
}

# Function to deploy the Docker container for the app
deploy_container() {
    # Specify the app name and config file path
    app_name=$1
    config_path="/pg/config/${app_name}.cfg"

    # Source the configuration file to get the appdata_path and app_name
    if [[ -f "$config_path" ]]; then
        source "$config_path"
    else
        echo "Error: Configuration file not found at $config_path."
        exit 1
    fi

    # Check and update the Plex token if necessary
    if [[ "$plex_token" == "null" || ! "$plex_token" =~ ^claim || "$plex_token" == "no-token" ]]; then
        while true; do
            clear
            echo "The Plex Token needs to be updated"
            echo -e "A. Please enter your Plex Token from \033]8;;https://plex.tv/claim\033\\https://plex.tv/claim\033]8;;\033\\"
            echo -e "B. To skip entering a token, type: ${RED}no-token${NC}"
            echo ""
            read -p "Plex Token: " new_token

            if [[ "$new_token" == "no-token" || "$new_token" =~ ^claim ]]; then
                plex_token="$new_token"
                # Update the config file with the new token
                sed -i "s|^plex_token=.*|plex_token=$plex_token|" "$config_path"
                break
            else
                echo -e "${RED}Invalid token format. Please ensure the token starts with 'claim-' or type 'no-token'.${NC}"
                sleep 2
            fi
        done
    fi

    # Run the Plex Docker container with the specified settings
    docker run -d \
      --name="${app_name}" \
      --net=host \
      -e PUID=1000 \
      -e PGID=1000 \
      -e TZ="${time_zone}" \
      -e VERSION=docker \
      -e PLEX_CLAIM="${plex_token}" \
      -v "${appdata_path}":/config \
      -v "${media_path}":/media \
      -v realdebrid:/torrents \
      --restart unless-stopped \
      lscr.io/linuxserver/plex:latest

    # Verify the Docker container is running
    docker ps | grep "$app_name"
}

# Now you can call the function deploy_container when needed
# Example: deploy_container "$app_name"
